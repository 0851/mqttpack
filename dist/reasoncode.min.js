!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o((e="undefined"!=typeof globalThis?globalThis:e||self).reasoncode={})}(this,(function(e){"use strict";const o={connack:[{code:0,name:"success"},{code:128,name:"unspecifiedError"},{code:129,name:"malformedPacket"},{code:130,name:"protocolError"},{code:131,name:"implementationSpecificError"},{code:132,name:"unsupportedProtocolVersion"},{code:133,name:"clientIdentifierNotValid"},{code:134,name:"badUserNameOrPassword"},{code:135,name:"notAuthorized"},{code:136,name:"serverUnavailable"},{code:137,name:"serverBusy"},{code:138,name:"banned"},{code:140,name:"badAuthenticationMethod"},{code:144,name:"topicNameInvalid"},{code:149,name:"packetTooLarge"},{code:151,name:"quotaExceeded"},{code:153,name:"payloadFormatInvalid"},{code:154,name:"retainNotSupported"},{code:155,name:"qoSNotSupported"},{code:156,name:"useAnotherServer"},{code:157,name:"serverMoved"},{code:159,name:"connectionRateExceeded"}],puback:[{code:0,name:"success"},{code:16,name:"noMatchingSubscribers"},{code:128,name:"unspecifiedError"},{code:131,name:"implementationSpecificError"},{code:135,name:"notAuthorized"},{code:144,name:"topicNameInvalid"},{code:145,name:"packetIdentifierInUse"},{code:151,name:"quotaExceeded"},{code:153,name:"payloadFormatInvalid"}],pubrec:[{code:0,name:"success"},{code:16,name:"noMatchingSubscribers"},{code:128,name:"unspecifiedError"},{code:131,name:"implementationSpecificError"},{code:135,name:"notAuthorized"},{code:144,name:"topicNameInvalid"},{code:145,name:"packetIdentifierInUse"},{code:151,name:"quotaExceeded"},{code:153,name:"payloadFormatInvalid"}],pubrel:[{code:0,name:"success"},{code:146,name:"packetIdentifierNotFound"}],pubcomp:[{code:0,name:"success"},{code:146,name:"packetIdentifierNotFound"}],suback:[{code:0,name:"grantedQoS0"},{code:1,name:"grantedQoS1"},{code:2,name:"grantedQoS2"},{code:128,name:"unspecifiedError"},{code:131,name:"implementationSpecificError"},{code:135,name:"notAuthorized"},{code:143,name:"topicFilterInvalid"},{code:145,name:"packetIdentifierInUse"},{code:151,name:"quotaExceeded"},{code:158,name:"sharedSubscriptionsNotSupported"},{code:161,name:"subscriptionIdentifiersNotSupported"},{code:162,name:"wildcardSubscriptionsNotSupported"}],unsuback:[{code:0,name:"success"},{code:17,name:"noSubscriptionExisted"},{code:128,name:"unspecifiedError"},{code:131,name:"implementationSpecificError"},{code:135,name:"notAuthorized"},{code:143,name:"topicFilterInvalid"},{code:145,name:"packetIdentifierInUse"}],disconnect:[{code:0,name:"normalDisconnection"},{code:4,name:"disconnectWithWillMessage"},{code:128,name:"unspecifiedError"},{code:129,name:"malformedPacket"},{code:130,name:"protocolError"},{code:131,name:"implementationSpecificError"},{code:135,name:"notAuthorized"},{code:137,name:"serverBusy"},{code:139,name:"serverShuttingDown"},{code:141,name:"keepAliveTimeout"},{code:142,name:"sessionTakenOver"},{code:143,name:"topicFilterInvalid"},{code:144,name:"topicNameInvalid"},{code:147,name:"receiveMaximumExceeded"},{code:148,name:"topicAliasInvalid"},{code:149,name:"packetTooLarge"},{code:150,name:"messageRateTooHigh"},{code:151,name:"quotaExceeded"},{code:152,name:"administrativeAction"},{code:153,name:"payloadFormatInvalid"},{code:154,name:"retainNotSupported"},{code:155,name:"qoSNotSupported"},{code:156,name:"useAnotherServer"},{code:157,name:"serverMoved"},{code:158,name:"sharedSubscriptionsNotSupported"},{code:160,name:"maximumConnectTime"},{code:161,name:"subscriptionIdentifiersNotSupported"},{code:162,name:"wildcardSubscriptionsNotSupported"}],auth:[{code:0,name:"success"},{code:24,name:"continueAuthentication"},{code:25,name:"reAuthenticate"}]};e.FindReasonCode=function(e,n){let c,d=o[e];if(!d)throw new Error(`${e} reasonName not support`);for(let e=0;e<d.length;e++){const o=d[e];o.name===n&&(c=o)}if(void 0===c)throw new Error(`${e} reasonName ${n} not support`);return c.code},e.FindReasonCodeName=function(e,n){let c,d=o[e];if(!d)throw new Error(`${e} reasonCode not support`);for(let e=0;e<d.length;e++){const o=d[e];o.code===n&&(c=o)}if(void 0===c)throw new Error(`${e} reasonCode ${n} not support`);return c.name},e.ReasonCodes=o,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=reasoncode.min.js.map
